# General
general.about-me=Sobre mi
general.works=Trabajos
general.skills=Habilidades
general.developer=Desarrollador
general.type=Tipo
general.date=Fecha
general.technologies=Tecnologías
general.technology=Tecnología
general.role=Puesto
general.my-name=Borja Castellano
general.team-and-colaborators=Equipo y colaboradores

# home.rs -> Left Pane
home.left-pane.profession=Ingeniero de Software
home.left-pane.download-cv=Descargar CV

# home.rs -> Left Pane -> Contact Info
home.left-pane.contact-info.email-title=Correo Electrónico
home.left-pane.contact-info.email-detail=borjacastellano1@gmail.com

home.left-pane.contact-info.phone-title=Teléfono
home.left-pane.contact-info.phone-detail=+1 (206) 437-0159

home.left-pane.contact-info.ubi-title=Ubicación
home.left-pane.contact-info.ubi-detail=Lake Tapps, WA

home.left-pane.contact-info.availability-title=Disponibilidad horaria
home.left-pane.contact-info.availability-detail=De mañana y tarde

home.left-pane.contact-info.nacionality-title=Nacionalidad
home.left-pane.contact-info.nacionality-detail=Española y Estadounidense

# about.rs
about.p-1=Soy Borja Castellano Extremadouro y, desde 2014, programo por pasión y de forma autodidacta en varios lenguajes (C#, Java, Rust...), desarrollando mis propios proyectos, algunos de los cuales están disponibles en mi portafolio en línea.
about.p-2=Estudié el Grado en Matemáticas en la UVa y la USC, y recientemente he completado el Ciclo Formativo de Grado Superior en Desarrollo de Software con calificación de matrícula de honor, formalizando así mis conocimientos técnicos.
about.p-3=Desde que comencé la universidad, he trabajado como profesor particular, tanto de forma independiente como en una academia de apoyo educativo. Desde el verano de 2025, también trabajo como autónomo, desarrollando soluciones de software a medida.
about.p-4=Mis proyectos de código abierto pueden encontrarse en mi perfil de GitHub, entre los que destaca The Round Table, una aplicación de software para restaurantes desarrollada recientemente a petición de un cliente.
about.p-5=Mis intereses actuales, y las áreas en las que me gustaría centrar mi carrera profesional, incluyen el desarrollo de bajo nivel, la optimización de algoritmos y el software para usuarios finales que resuelva problemas de manera innovadora y moderna.

# skill dyn-data
skill.cs-unity.title=C# y Unity3D
skill.cs-unity.description=Con dos años de experiencia utilizando Unity y C#, he desarrollado habilidades sólidas en el desarrollo de aplicaciones, demostrando así mi capacidad para trabajar en entornos de desarrollo complejos.

skill.c.title=C
skill.c.description=C es el lenguaje con el que empecé y más recientemente me ha permitido trabajar en proyectos de computación científica en el CESGA, donde he adquirido experiencia en la resolución de problemas complejos y en la optimización de código.

skill.java-javafx.title=Java y JavaFX
skill.java-javafx.description=Tanto Java como Java FX me han permitido expandir mi conjunto de habilidades en programación y mis posibilidades al poder crear aplicaciones de usuario multiplataforma.

skill.problem-solving.title=Resolución de problemas y Pensamiento Crítico
skill.problem-solving.description=El grado en Matemáticas me ha dotado de habilidades sólidas en resolución de problemas y pensamiento crítico aplicables al desarrollo de software.

skill.rust.title=Rust
skill.rust.description=Siendo Rust un lenguaje que me encanta, mi experiencia con el me ha permitido explorar nuevas formas de programar y desarrollar software de sistemas y alto rendimiento.

skill.selftaught.title=Autodidacta
skill.selftaught.description=Mi formación autodidacta demuestra mi capacidad para aprender de forma independiente y adaptarme a nuevas tecnologías y conceptos de forma rápida y flexible.

skill.teamwork-leadership.title=Trabajo en equipo y Liderazgo
skill.teamwork-leadership.description=Mi capacidad para liderar, colaborar en equipo y para comunicar ideas de manera efectiva se ve reforzada por mi experiencia como profesor.

# works.rs
work.view.title=Proyectos

# works dyn-data
# technologies
work.technology.spring-boot=Spring Boot
work.technology.rocket=Rocket
work.technology.java-fx=JavaFX
work.technology.trt=JavaFX y Rust
work.technology.unity=Unity

# roles
work.role.developer=Desarrollador
work.role.lead-developer=Desarrollador Líder
work.role.teacher=Profesor
work.role.architect-developer=Arquitecto y desarrollador

# works section Rust
work-section.rust.title=Rust

work.fee.title=fee
work.fee.description=Biblioteca rápida y flexible para evaluar expresiones matemáticas a partir de texto.
work.fee.type=Crate

work.mk-template.title=MK Template
work.mk-template.description=Aplicación de consola que permite al usuario guardar diferentes formatos de plantillas de archivos y directorios para ser instanciadas en un futuro de una manera rápida y sencilla.
work.mk-template.type=Aplicación de consola

work.db-sniffer.title=DB-Sniffer
work.db-sniffer.description=Herramienta para la introspección y exportación de un esquema de base de datos relacional.
work.db-sniffer.type=Aplicación de consola

work.trt-api.title=The Round Table REST API
work.trt-api.description=Esta API proporciona métodos de verificación de licencias y distribuye, tanto los plugins, como las actualizaciones de estos y de la aplicación principal.
work.trt-api.type=REST API

# works section C++
work-section.cpp.title=C++

work.compositor.title=Tiled Compositor
work.compositor.description=Compositor de ventanas simple basado en Mir, con un comportamiento en mosaico similar a i3.
work.compositor.type=Compositor de ventanas

# works section Java
work-section.java.title=Java

work.seal-code.title=Seal Code
work.seal-code.description=Editor de texto avanzado que busca servir como base para la creación de IDE.
work.seal-code.type=Editor de texto avanzado

work.leba-api.title=Leba REST API
work.leba-api.description=Esta API permite la gestión de los usuarios, recolección de datos sobre el gameplay y la laderboard.
work.leba-api.type=REST API

work.the-round-table.title=The Round Table
work.the-round-table.description=Aplicación visualmente atractiva y fácil de usar para la gestión de bares y restaurantes. Cuenta con sistemas para gestionar las mesas, imprimir recibos, visualizar estadísticas y gestionar los productos.
work.the-round-table.type=TPV para bares y restaurantes

# works section scientific
work-section.scientific.title=Scientific

work.cuqdyn-c.title=Cuqdyn-C
work.cuqdyn-c.description=Librería y CLI para la Cuantificación de la Incertidumbre en Modelos Dinámicos de Sistemas Biológicos
work.cuqdyn-c.type=Aplicación de consola, computación científica e investigación
work.cuqdyn-c.role=Desarrollador líder

# works section C#
work-section.csharp.title=C#

work.leba.title=Leba
work.leba.description=Juego de plataformeo vertical con sistema de skins, logros, combate y generación procedural.
work.leba.type=Juego móvil
work.leba.role=Diseñador, arquiteco y desarrollador

# work.rs
work-view.section-title.technicaldata=Ficha técnica
work-view.section-title.features=Características
work-view.section-title.downloads=Descargas
work-view.section-title.project-description=Descripción del proyecto
work-view.section-title.state=Estado
work-view.section-title.multimedia=Multimedia

# work view -> Leba
work-view.leba.technicaldata.technologies=C# y Unity
work-view.leba.technicaldata.role=Diseñador, arquitecto y desarrollador

work-view.leba.features.1=Juego de plataformeo vertical en 2D
work-view.leba.features.2=Sistema de skins y logros
work-view.leba.features.3=Combate y generación procedural
work-view.leba.features.4=Ranking de puntuaciones

work-view.leba.description.1=Juego de platformeo vertical con generación procedural de niveles. La mecánica principal del juego es ir saltando de pared en pared para ascender tan alto como puedas. Por el camino tendrás que esquivar obstaculos que no te lo pondrán fácil y enemigos con mecánicas distintivas y únicas.
work-view.leba.description.2=El juego cuenta con un sistema de skins y logros que irás desbloqueando a medida que vayas jugando. Además cuenta con servidor propio y un sistema de clasificación global de jugadores basado en su puntuación máxima.
work-view.leba.description.3=En cuanto a la arquitectura del código, se aplican diferentes patrones de diseño que permiten una fácil escalabilidad y mantenimiento de este tales como el patrón estrategia o estado.

work-view.leba.state.1.title=Disponibilidad
work-view.leba.state.1.detail=El juego está disponible en Play Store para su descarga.

# work view -> Leba REST API
work-view.leba-api.technicaldata.technologies=Java y Spring Boot
work-view.leba-api.technicaldata.role=Arquiteco y desarrollador

work-view.leba-api.features.1=Uso de Spring Boot
work-view.leba-api.features.2=Uso de Lombok

work-view.leba-api.description.1=Esta API es la encargada de gestionar los usuarios, recolectar datos sobre el gameplay y la leaderboard. Toda la información es almacenada en una base de datos MySQL en el servidor.
work-view.leba-api.description.2=Actualmente se encuentra en producción y es usada por la aplicación móvil de Leba, que cuenta con mas de 2000 descargas en la Play Store.

work-view.leba-api.state.1.title=Disponibilidad del código
work-view.leba-api.state.1.detail=Por razones de seguridad, el código fuente no está disponible.

# work view -> MK Template
work-view.mk-template.technicaldata.technologies=Rust
work-view.mk-template.technicaldata.role=Arquitecto y desarrollador

work-view.mk-template.features.1=Guardado de diferentes formatos de plantillas
work-view.mk-template.features.2=Creación de archivos y directorios

work-view.mk-template.description.1=Más de una vez me he encontrado con la necesidad una estructura de archivos y directorios que ya había utilizado en otros proyectos y, para no tener que pasar por este infierno cada vez he decidido crear una aplicación de consola que me permita guardar diferentes formatos de plantillas para ser instanciadas en un futuro de una manera rápida y sencilla.
work-view.mk-template.description.2=Actualmente la aplicación soporta:
work-view.mk-template.description.3=    • Guardar un directorio con todo su contenido como plantilla a copiar en el futuro.
work-view.mk-template.description.4=    • Guardar una URI a un .git al que se le hará git clone cada vez que se instancie la plantilla.
work-view.mk-template.description.5=    • Uso de una structura XML definida para guardar y crear las plantillas.

work-view.mk-template.state.1.title=Disponibilidad
work-view.mk-template.state.1.detail=El codigo fuente esta disponible en GitHub. Ejecutando el archivo install.sh se compilará el proyecto y se copiará el ejecutable en la carpeta ~/.local/bin. El proyecto es Open Source y se puede modificar y distribuir libremente.
work-view.mk-template.state.2.title=Actualización
work-view.mk-template.state.2.detail=El proyecto se encuentra en constante desarrollo y se irán añadiendo nuevos tipos de plantilla soportado, así como un XML propio para definir nuevas plantillas.
work-view.mk-template.state.3.title=Documentación
work-view.mk-template.state.3.detail=La documentación del proyecto se encuentra en el archivo README.md y, si este aún no existe, se creará en un futuro próximo.

# work view -> Seal Code
work-view.seal-code.technicaldata.technologies=Java y JavaFX
work-view.seal-code.technicaldata.role=Arquitecto y desarrollador

work-view.seal-code.features.1=Editor de texto avanzado
work-view.seal-code.features.2=Creación de IDEs personalizados
work-view.seal-code.features.3=Resaltado de sintaxis y autocompletado
work-view.seal-code.features.4=Sincronización en la nube

work-view.seal-code.description.1=Seal Code es un editor de texto avanzado que permite la creación de entornos personalizados . La idea principal del proyecto es la creción de un core potente que permita la facil implementación de 'plugins' que amplien sus funcionalidades. Además, sin necesidad de tener conocimientos de Java FX, cualquier usuario puede crear sus plantillas de autocompletado y resalto de sintaxis según la extensión de los ficheros abiertos.
work-view.seal-code.description.2=El core de Seal Code se comunica mediante eventos con la lógica que el programador quiera implementar, permitiendo así personalizar cada aspecto del entorno de desarrollo que se busque crear. Este enfoque lo que busca es minimizar la necesidad de entender como funciona internamente el software facilitando así su implementación.
work-view.seal-code.description.3=En el momento actual el IDE cuenta con un plugin simple orientado al desarrollo en Java de ejemplo que muestra las capacidades del core para implementar lo que el desarrollador desee. También cuenta, por defecto, con un plugin que permite la creacion de una cuenta de usuario que se usará para la sincronización de las configuraciones del editor en diferentes instancias del software.

work-view.seal-code.state.1.title=Desarrollo
work-view.seal-code.state.1.detail=Actualmente el core está pendiente de una refactorización pequeña. Se tiene planificaco desarrollar un par de plugins extra que amplien las funcionalidades básicas y también está pendiente modificar la comunicación del plugin de sincronización en la nube para pasar a usar un servidor propio usando HTTP Requests.
work-view.seal-code.state.2.title=Disponibilidad
work-view.seal-code.state.2.detail=El codigo está disponible en GitHub de forma pública pero no una versión final del software.
work-view.seal-code.state.3.title=Documentación
work-view.seal-code.state.3.detail=El proyecto se encuentra pendiente de documentación.

# work view -> The Round Table
work-view.the-round-table.technicaldata.technologies=JavaFX y Rust
work-view.the-round-table.technicaldata.role=Arquitecto y desarrollador

work-view.the-round-table.features.1=Impresión y gestión de recibos
work-view.the-round-table.features.2=Gestión de productos
work-view.the-round-table.features.3=Gestión de las mesas del local
work-view.the-round-table.features.4=Arquitecura micro-kernel

work-view.the-round-table.description.1=Software TPV para la gestión de restaurantes y bares. Permite la gestión de productos, mesas y la impresión de recibos. Además permite la visualización de estadísticas ya que todos los datos de recibos se guardan en un base de datos SQLite.
work-view.the-round-table.description.2=El sotware está desarrollado en Java y se ha utilizado JavaFX para la interfaz gráfica. Se pude comunicar mediante ESC/POS con impresoras de tickets.
work-view.the-round-table.description.3=En cuanto a la arquitectura del software, se ha utilizado una arquitectura micro-kernel para separar la lógica principal de la aplicación de los plugins que se pueden añadir para ampliar las funcionalidades de este. Tambien se ha utilizado un patrón de diseño MVC para separar la lógica de la interfaz gráfica junto a otros tantos patrones de diseño que permiten una fácil escalabilidad y mantenimiento del código.
work-view.the-round-table.description.4=El desarrollo de plugins es sencillo y flexible. El progrmador dispone de funcionalidades para interactuar con la base de datos, la interfaz gráfica y otros plugins de forma sencilla y rápida. Al ser el proyecto de codigo libre, en los diferentes repositorios de los plugins actualmente desarrollados se puede explorar la forma en que funcionan e interactuan.

work-view.the-round-table.state.1.title=Disponibilidad
work-view.the-round-table.state.1.detail=El software se encuentra actualmente en funcionamiento en una versión beta de este en algunos establecimientos. Actualmente solo esta disponible la versión de Linux al público final pero se está trabajando en una versión para Windows que se espera que vendrá con la versión 3.0.0.
work-view.the-round-table.state.2.title=Documentación
work-view.the-round-table.state.2.detail=La documentación del proyecto y del desarrollo de plugins no se encuentra terminada y esta postpuesta hasta que se lance la versión 3.0.0 y se solucionen los posibles bugs que puedan surgir. Lamento la situación pero el encargo para desarrollar este software ha sido muy reciente y no he tenido tiempo de documentar el funcionamiento y enfoque del proyecto en mayor profundidad.
work-view.the-round-table.state.3.title=Actualización
work-view.the-round-table.state.3.detail=El proyecto se encuentra en constante desarrollo y se actualiza con cada nueva versión. La versión 3.0.0 se espera que sea lanzada antes de Junio y una de las grandes novedades es el protocolo de red que permitirá la comunicación entre diferentes instancias del software definiendo uno como servidor central. Siendo esta una funcionalidad básica con la que debería haberse lanzado el software pero que por falta de tiempo no se ha podido implementar hasta ahora.

# work view -> The Round Table REST API
work-view.trt-api.technicaldata.technologies=Rust y Rocket
work-view.trt-api.technicaldata.role=Arquitecto y desarrollador

work-view.trt-api.features.1=Distribución de actualizaciones
work-view.trt-api.features.2=Verificación de licencias

work-view.trt-api.description.1=REST API sencilla que permite comunicación entre el servidor lebastudios.org y la aplicación The Round Table para proporcionar actualizaciones y plugins al cliente final. Además se encarga de la verificación de licencias.
work-view.trt-api.description.2=La API está desarrollada en Rust y utiliza el framework Rocket. La decisión de utilizar Rust fue por su velocidad, seguridad y poco comsumo de recursos (6.1 MB de memoria ahora mismo), además de que Rocket es un framework web que permite la creación de REST APIs de forma sencilla y rápida similar a Spring Boot.

work-view.trt-api.state.1.title=Desarrollo
work-view.trt-api.state.1.detail=La API está en constante desarrollo y se actualiza con cada nueva versión.
work-view.trt-api.state.2.title=Disponibilidad
work-view.trt-api.state.2.detail=Por razones de seguridad de los actuales y futuros usuarios del software el código fuente no está disponible al público.

# work view -> Cuqdyn-C
work-view.cuqdyn-c.technicaldata.technologies=C, Fortran, Rust y MPI
work-view.cuqdyn-c.technicaldata.role=Architecto y desarrollador líder

work-view.cuqdyn-c.features.1=Resolución dinámica de problemas
work-view.cuqdyn-c.features.2=Paralelización MPI
work-view.cuqdyn-c.features.3=Cuantificación de la Incertidumbre en Modelos Dinámicos de Sistemas Biológicos

work-view.cuqdyn-c.description.1=Cuqdyn-C es una librería y CLI para la Cuantificación de la Incertidumbre en Modelos Dinámicos de Sistemas Biológicos. Este proyecto se desarrollo dentro del CESGA, por encargo del CSIC, donde el objetivo era transpilar el código Matlab de un estudio realizado entre el CSIC y la Universidad de Harvard a C para su posterior paralelización y optimización.
work-view.cuqdyn-c.description.2=El proyecto usa C para la lógica de la aplicación, Fortran para el solver ESS que se encarga de generar las posibles soluciones al problema dados unos estados observados y Rust para la definición de los modelos. Además, se ha utilizado MPI dentro de un entorno de computación distribuida para la paralelización de la aplicación y así poder resolver problemas de gran tamaño.
work-view.cuqdyn-c.description.3=El estudio original se puede encontrar en el siguiente enlace: https://zenodo.org/records/13838652

work-view.cuqdyn-c.state.1.title=Desarrollo
work-view.cuqdyn-c.state.1.detail=Tanto la librería como la CLI han alcanzado los objeticos y han sido entregados a los clientes. Aun así, no se descarta el seguir desarrollando funcionalidades tales como la posibilidad de usar menos estados observados que los que definen el modelo.

# work view -> DB-sniffer
work-view.db-sniffer.technicaldata.technologies=Rust y diferentes bases de datos relacionales
work-view.db-sniffer.technicaldata.role=Architecto y desarrollador

work-view.db-sniffer.features.1=Bases de datos relacionales

work-view.db-sniffer.description.1=DB-Sniffer es una herramienta para la introspección de bases de datos relacionales. Permite la conexión a diferentes bases de datos y la obtención de información sobre las tablas, columnas y relaciones entre ellas para, posteriormente, exportar los datos obtenidos a diferentes formatos como archivos de mapeo de Hibernate.
work-view.db-sniffer.description.2=La aplicación fue desarrollada por la necesidad de generar archivos de mapeo XML de Hibernate durante mi época como estudiante ya que, debido a encontrarse obsoleta esta forma de mapeo, no fui capaz de encontrar una herramienta disponible que me permitiera hacerlo de forma sencilla.

work-view.db-sniffer.state.1.title=Desarrollo
work-view.db-sniffer.state.1.detail=La aplicación ya cumplió con su objetivo inicial de exportar a archivos XML de mapeo de Hibernate pero, debido a su arquitectura y la facilidad para incluír nuevas bases de datos y opciones de exportación, no se descarta que en un futuro se añadan estas.

# work view -> fee
work-view.fee.technicaldata.technologies=Rust
work-view.fee.technicaldata.role=Arquitecto y Desarrollador

work-view.fee.features.1=Alto rendimiento
work-view.fee.features.2=Compatibilidad con operadores aritméticos, booleanos y bit a bit
work-view.fee.features.3=Flexibilidad
work-view.fee.features.4=Compilación inteligente

work-view.fee.description.1=fee es una biblioteca rápida y flexible para evaluar expresiones matemáticas a partir de cadenas. Se centra en el rendimiento en tiempo de ejecución, manteniendo la capa de análisis sintáctico simple y eficiente. Este crate fue diseñado originalmente para impulsar software científico y de ingeniería donde las expresiones no pueden codificarse de forma fija.
work-view.fee.description.2=Uno de los objetivos de esta biblioteca es ofrecer una API simple pero potente. Para lograrlo, el método Expr::compile(), según el contexto proporcionado y gracias al sistema de tipos de Rust, selecciona automáticamente la mejor Expr<T> para tu contexto. Solo necesitas elegir los resolvers adecuados, y fee compilará la forma más eficiente en tiempo de compilación.
work-view.fee.description.3=Para garantizar la calidad del producto, se ejecutan benchmarks con cada cambio para asegurar el máximo rendimiento. Estos benchmarks se pueden encontrar en la página del crate.

# work view -> Compositor
work-view.compositor.technicaldata.technologies=Mir
work-view.compositor.technicaldata.role=Arquitecto y Desarrollador

work-view.compositor.features.1=Tiles
work-view.compositor.features.2=Workspaces
work-view.compositor.features.3=Keybindings

work-view.compositor.description.1=Compositor en mosaico simple para Linux basado en Mir. Proporciona gestión de espacios de trabajo y combinaciones de teclas para todas las funcionalidades básicas. Puedes obtener más información en el archivo README.md disponible en el repositorio.

# knowledge
knowledge.view.title=Conocimiento
knowledge.category.prog-langs=Lenguajes de Programación
knowledge.category.frameworks=Frameworks
knowledge.category.databases=Bases de Datos
knowledge.category.tech&tools=Tecnologías y Herramientas
knowledge.category.hppc=Alto rendimiento y paralelismo
